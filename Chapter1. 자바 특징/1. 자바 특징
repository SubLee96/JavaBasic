Java의 정석(3rd edition)

Chapter01. 자바(Java Programming Language)

----------------------------------------------------------------------------
> 특징
1. 운영체제가 독립적이다.
: 자바 가상 머신(JVM)을 통해서 운영체제에 맞게 변환하여 전달해준다.
: '한 번 작성하면, 어디서나 실행된다.(Write Once, Run Anywhere)'

2. 객체지향언어이다.(Object-Oriented Programming Language)
: 상속, 캡슐화, 다형성이 잘 적용되어 있다.

3. 배교적 배우기 쉽다.
: 간결하고 명료한 객체지향적 설계는 사용자들이 쉽게 이해할 수 있게 돕는다.

4. 자동 메모리 관리(Garbage Collector)
: 작성된 프로그램이 실행되면, 가비지 컬렉터가 자동적으로 메모리를 관리해준다.
> 사용자가 따로 메모리를 관리해줄 필요가 없다.

5. 네트워크와 분산처리를 지원한다.
: 비교적 짧은 시간에 네트워크 관련 프로그램을 쉽게 개발할 수 있다.

6. 멀티쓰레드를 지원한다.(Multi-thread)
: 시스템과 관계없이 구현가능하다.

7. 동적 로딩(Dynamic Loading)을 지원한다.
: 실행 시에 모든 클래스가 로딩되지 않고 필요한 시점에 클래스를 로딩하여 사용할 수 있다.
: 일부 클래스가 변경되어도 전체 애플리케이션을 다시 컴파일하지 않아도 되며, 애플리케이션 변경사항이
  발생해도 비교적 적은 작업만으로도 처리할 수 있는 유연한 애플리케이션을 작성할 수 있다.
----------------------------------------------------------------------------

# JVM(Java Virtual Machine)
: '자바를 실행하기 위한 가상 기계'로 자바 애플리케이션이 실행되기에 앞서 반드시 필요하다.
> 하드웨어에 맞게 완전히 컴파일된 상태가 아니고 실행 시에 해석되기에 속도가 느리다는 단점은 있으나, 
  바이트코드(컴파일된 자바코드)를 하드웨어의 기계어로 바로 변환해주는 JIT 컴파일러와 향상된 최적화 기술이 적용되어
  속도 격차를 많이 줄였다.
----------------------------------------------------------------------------
Java : Java 애플리케이션 <-> JVM <-> OS(windows) <-> 컴퓨터(하드웨어)
일반  : 일반 애플리케이션 <-> OS(Windows) <-> 컴퓨터(하드웨어)
----------------------------------------------------------------------------
: 일반 애플리케이션은 OS와 맞붙어있기에 OS에 종속적이다.
: JVM이 OS에 종속적이다.

=> JVM이 있기에 특징 1번인 'Write Once, Run Anywhere'가 가능한 것이다.

# 자주 발생하는 에러와 해결방법
: 에러 메시지는 GOOGLE에서 검색하면 된다!

----------------------------------------------------------------------------
1. cannot find symbol 또는 cannot resolve symbol
: 지정된 변수나 메서드를 찾을 수 없다는 뜻
> 선언되지 않은 변수나 메서드 사용 / 변수 또는 메서드의 이름이 잘못된 경우

=> 대소문자 비교가 필수적이다!!!

2. ';' expected
: 세미콜론이 필요한 곳에 빠졌다는 의미이다.

=> ;는 마침표와 동일한 역할을 하니 필수적이다!!!

3. Exception in thread "main" java.lang.NoClassDefFoundError: Hello
: 'Hello라는 클래스를 찾을 수 없다.'라는 뜻

=> 대소문자 확인 후, 클래스파일(*.class)이 생성되었는지 확인한다.
=> 클래스파일이 존재해도 동일 메시지가 뜨면 클래스패스(classpath) 설정을 바르게 해야한다.

4. Exception in thread "main" java.lang.NoSuchMethodError: main
: 'main메서드를 찾을 수 없다.'라는 뜻
> 클래스 내에 main메서드가 존재하지 않을 경우 혹은 'public static void main(String[] args)'
  에 오타가 존재하는 경우

=> main클래스가 정의되었는지 확인 / main메서드 선언부에 오타가 없는지 확인 / 대소문자 확인하기

5. illegal start of expression
: '문장의 앞부분이 문법에 맞지 않다.'라는 뜻 (문법적 오류가 있다는 의미)
> 괄호 '('나 '{'를 열거나 닫지 않음 / 수식, if, for문 등에 문법적 오류 /
  public이나 static 등의 키워드를 잘못 사용한 경우

6. class, interface, or enum expected
: '키워드 class나 interface 또는 enum이 없다.'라는 뜻
> 괄호 '(' 또는 '{'의 개수가 일치하지 않은 경우
----------------------------------------------------------------------------


※ 에러 발생시 근본적인 해결책 ※
=======================================================
1. 에러 메시지를 자세히 읽고 해당 부분 코드 살펴보기!
> 이상 없을 경우, 주변 코드 확인해보기
2. 1번이 이상 없을시, 에러 메시지를 무시하고 기본적인 부분 재확인하기
> 대부분의 실수는 기본적인 부분에서 실수가 발생한다.
3. 의심이 가는 부분을 주석처리하거나 따로 테스트하기
=======================================================


# 주석(Comment)
: 프로그램이 커질수록 주석의 중요성은 커져만 간다. 본인이 어디까지 무슨 작업을 완료했는지 확인하는 부분이 필요하다!

= 주석 처리 방법
1. 범위 주석 : '/*'와 '*/' 사이의 내용은 주석으로 간주한다.
2. 한 줄 주석 : '//'부터 라인 끝까지 내용은 주석으로 간주한다.

=> 프로그램 성능과 무관하기에 주석을 적극적으로 사용하자!!!
